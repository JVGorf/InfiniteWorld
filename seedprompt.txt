"Implement a seeded procedural world generation system in `script.js` to ensure consistent world maps and drastically reduce `localStorage` usage.

**Objective:**
1.  **Introduce a Seedable PRNG:** Replace all existing uses of `Math.random()` with a custom-built or imported seedable pseudo-random number generator (PRNG).
2.  **World Seed Management:**
    *   A main 'world seed' (e.g., a number or string) should be introduced.
    *   This 'world seed' must be saved to and loaded from `localStorage`.
    *   If no 'world seed' is found in `localStorage` upon loading, generate a new random one and save it.
3.  **Deterministic Generation:**
    *   For all tile generation (within `getTile`) and cluster generation (within `generateCluster`), the PRNG should be re-seeded using a combination of the main 'world seed' and the specific `(x, y)` coordinates of the tile or cluster origin. This ensures that any given `(x, y)` pair always produces the same tile character and cluster shape.
4.  **Remove `worldZeroData` Storage:** The `worldZeroData` Map should no longer be saved to or loaded from `localStorage`. The world will be generated on-the-fly based on the seed and coordinates.

**Expected Outcome:**
The game should load and render a perfectly consistent world based on the stored seed. The `localStorage` footprint for world data should be minimal, containing only the seed, player location, character attributes, recall points, and other non-world-generation-specific data. After implementation, confirm the changes and explain how to verify the new system's consistency."